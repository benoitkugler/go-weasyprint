package properties

// autogenerated from initial_values.go

func (s Properties) GetBottom() Value {
	return s["bottom"].(Value)
}
func (s Properties) SetBottom(v Value) {
	s["bottom"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetCaptionSide() String {
	return s["caption_side"].(String)
}
func (s Properties) SetCaptionSide(v String) {
	s["caption_side"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetClear() String {
	return s["clear"].(String)
}
func (s Properties) SetClear(v String) {
	s["clear"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetClip() Values {
	return s["clip"].(Values)
}
func (s Properties) SetClip(v Values) {
	s["clip"] = v
}
func (Values) afterCascaded() {}
func (Values) afterCompute()  {}

func (s Properties) GetColor() Color {
	return s["color"].(Color)
}
func (s Properties) SetColor(v Color) {
	s["color"] = v
}
func (Color) afterCascaded() {}
func (Color) afterCompute()  {}

func (s Properties) GetCounterIncrement() SIntStrings {
	return s["counter_increment"].(SIntStrings)
}
func (s Properties) SetCounterIncrement(v SIntStrings) {
	s["counter_increment"] = v
}
func (SIntStrings) afterCascaded() {}
func (SIntStrings) afterCompute()  {}

func (s Properties) GetCounterReset() IntStrings {
	return s["counter_reset"].(IntStrings)
}
func (s Properties) SetCounterReset(v IntStrings) {
	s["counter_reset"] = v
}
func (IntStrings) afterCascaded() {}
func (IntStrings) afterCompute()  {}

func (s Properties) GetDirection() String {
	return s["direction"].(String)
}
func (s Properties) SetDirection(v String) {
	s["direction"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetDisplay() String {
	return s["display"].(String)
}
func (s Properties) SetDisplay(v String) {
	s["display"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetEmptyCells() String {
	return s["empty_cells"].(String)
}
func (s Properties) SetEmptyCells(v String) {
	s["empty_cells"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFloat() String {
	return s["float"].(String)
}
func (s Properties) SetFloat(v String) {
	s["float"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetHeight() Value {
	return s["height"].(Value)
}
func (s Properties) SetHeight(v Value) {
	s["height"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetLeft() Value {
	return s["left"].(Value)
}
func (s Properties) SetLeft(v Value) {
	s["left"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetRight() Value {
	return s["right"].(Value)
}
func (s Properties) SetRight(v Value) {
	s["right"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetLineHeight() Value {
	return s["line_height"].(Value)
}
func (s Properties) SetLineHeight(v Value) {
	s["line_height"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetListStyleImage() Image {
	return s["list_style_image"].(Image)
}
func (s Properties) SetListStyleImage(v Image) {
	s["list_style_image"] = v
}
func (Image) afterCascaded() {}
func (Image) afterCompute()  {}

func (s Properties) GetListStylePosition() String {
	return s["list_style_position"].(String)
}
func (s Properties) SetListStylePosition(v String) {
	s["list_style_position"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetListStyleType() String {
	return s["list_style_type"].(String)
}
func (s Properties) SetListStyleType(v String) {
	s["list_style_type"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetMarginTop() Value {
	return s["margin_top"].(Value)
}
func (s Properties) SetMarginTop(v Value) {
	s["margin_top"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetMarginRight() Value {
	return s["margin_right"].(Value)
}
func (s Properties) SetMarginRight(v Value) {
	s["margin_right"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetMarginBottom() Value {
	return s["margin_bottom"].(Value)
}
func (s Properties) SetMarginBottom(v Value) {
	s["margin_bottom"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetMarginLeft() Value {
	return s["margin_left"].(Value)
}
func (s Properties) SetMarginLeft(v Value) {
	s["margin_left"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetMaxHeight() Value {
	return s["max_height"].(Value)
}
func (s Properties) SetMaxHeight(v Value) {
	s["max_height"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetMaxWidth() Value {
	return s["max_width"].(Value)
}
func (s Properties) SetMaxWidth(v Value) {
	s["max_width"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetPaddingTop() Value {
	return s["padding_top"].(Value)
}
func (s Properties) SetPaddingTop(v Value) {
	s["padding_top"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetPaddingRight() Value {
	return s["padding_right"].(Value)
}
func (s Properties) SetPaddingRight(v Value) {
	s["padding_right"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetPaddingBottom() Value {
	return s["padding_bottom"].(Value)
}
func (s Properties) SetPaddingBottom(v Value) {
	s["padding_bottom"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetPaddingLeft() Value {
	return s["padding_left"].(Value)
}
func (s Properties) SetPaddingLeft(v Value) {
	s["padding_left"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetPosition() String {
	return s["position"].(String)
}
func (s Properties) SetPosition(v String) {
	s["position"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetTableLayout() String {
	return s["table_layout"].(String)
}
func (s Properties) SetTableLayout(v String) {
	s["table_layout"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetTop() Value {
	return s["top"].(Value)
}
func (s Properties) SetTop(v Value) {
	s["top"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetUnicodeBidi() String {
	return s["unicode_bidi"].(String)
}
func (s Properties) SetUnicodeBidi(v String) {
	s["unicode_bidi"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetVerticalAlign() Value {
	return s["vertical_align"].(Value)
}
func (s Properties) SetVerticalAlign(v Value) {
	s["vertical_align"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetVisibility() String {
	return s["visibility"].(String)
}
func (s Properties) SetVisibility(v String) {
	s["visibility"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetWidth() Value {
	return s["width"].(Value)
}
func (s Properties) SetWidth(v Value) {
	s["width"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetZIndex() IntString {
	return s["z_index"].(IntString)
}
func (s Properties) SetZIndex(v IntString) {
	s["z_index"] = v
}
func (IntString) afterCascaded() {}
func (IntString) afterCompute()  {}

func (s Properties) GetBackgroundAttachment() Strings {
	return s["background_attachment"].(Strings)
}
func (s Properties) SetBackgroundAttachment(v Strings) {
	s["background_attachment"] = v
}
func (Strings) afterCascaded() {}
func (Strings) afterCompute()  {}

func (s Properties) GetBackgroundClip() Strings {
	return s["background_clip"].(Strings)
}
func (s Properties) SetBackgroundClip(v Strings) {
	s["background_clip"] = v
}
func (Strings) afterCascaded() {}
func (Strings) afterCompute()  {}

func (s Properties) GetBackgroundColor() Color {
	return s["background_color"].(Color)
}
func (s Properties) SetBackgroundColor(v Color) {
	s["background_color"] = v
}
func (Color) afterCascaded() {}
func (Color) afterCompute()  {}

func (s Properties) GetBackgroundImage() Images {
	return s["background_image"].(Images)
}
func (s Properties) SetBackgroundImage(v Images) {
	s["background_image"] = v
}
func (Images) afterCascaded() {}
func (Images) afterCompute()  {}

func (s Properties) GetBackgroundOrigin() Strings {
	return s["background_origin"].(Strings)
}
func (s Properties) SetBackgroundOrigin(v Strings) {
	s["background_origin"] = v
}
func (Strings) afterCascaded() {}
func (Strings) afterCompute()  {}

func (s Properties) GetBackgroundPosition() Centers {
	return s["background_position"].(Centers)
}
func (s Properties) SetBackgroundPosition(v Centers) {
	s["background_position"] = v
}
func (Centers) afterCascaded() {}
func (Centers) afterCompute()  {}

func (s Properties) GetBackgroundRepeat() Repeats {
	return s["background_repeat"].(Repeats)
}
func (s Properties) SetBackgroundRepeat(v Repeats) {
	s["background_repeat"] = v
}
func (Repeats) afterCascaded() {}
func (Repeats) afterCompute()  {}

func (s Properties) GetBackgroundSize() Sizes {
	return s["background_size"].(Sizes)
}
func (s Properties) SetBackgroundSize(v Sizes) {
	s["background_size"] = v
}
func (Sizes) afterCascaded() {}
func (Sizes) afterCompute()  {}

func (s Properties) GetBorderBottomColor() Color {
	return s["border_bottom_color"].(Color)
}
func (s Properties) SetBorderBottomColor(v Color) {
	s["border_bottom_color"] = v
}
func (Color) afterCascaded() {}
func (Color) afterCompute()  {}

func (s Properties) GetBorderLeftColor() Color {
	return s["border_left_color"].(Color)
}
func (s Properties) SetBorderLeftColor(v Color) {
	s["border_left_color"] = v
}
func (Color) afterCascaded() {}
func (Color) afterCompute()  {}

func (s Properties) GetBorderRightColor() Color {
	return s["border_right_color"].(Color)
}
func (s Properties) SetBorderRightColor(v Color) {
	s["border_right_color"] = v
}
func (Color) afterCascaded() {}
func (Color) afterCompute()  {}

func (s Properties) GetBorderTopColor() Color {
	return s["border_top_color"].(Color)
}
func (s Properties) SetBorderTopColor(v Color) {
	s["border_top_color"] = v
}
func (Color) afterCascaded() {}
func (Color) afterCompute()  {}

func (s Properties) GetBorderBottomStyle() String {
	return s["border_bottom_style"].(String)
}
func (s Properties) SetBorderBottomStyle(v String) {
	s["border_bottom_style"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetBorderLeftStyle() String {
	return s["border_left_style"].(String)
}
func (s Properties) SetBorderLeftStyle(v String) {
	s["border_left_style"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetBorderRightStyle() String {
	return s["border_right_style"].(String)
}
func (s Properties) SetBorderRightStyle(v String) {
	s["border_right_style"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetBorderTopStyle() String {
	return s["border_top_style"].(String)
}
func (s Properties) SetBorderTopStyle(v String) {
	s["border_top_style"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetBorderCollapse() String {
	return s["border_collapse"].(String)
}
func (s Properties) SetBorderCollapse(v String) {
	s["border_collapse"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetBorderSpacing() Point {
	return s["border_spacing"].(Point)
}
func (s Properties) SetBorderSpacing(v Point) {
	s["border_spacing"] = v
}
func (Point) afterCascaded() {}
func (Point) afterCompute()  {}

func (s Properties) GetBorderBottomWidth() Value {
	return s["border_bottom_width"].(Value)
}
func (s Properties) SetBorderBottomWidth(v Value) {
	s["border_bottom_width"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetBorderLeftWidth() Value {
	return s["border_left_width"].(Value)
}
func (s Properties) SetBorderLeftWidth(v Value) {
	s["border_left_width"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetBorderTopWidth() Value {
	return s["border_top_width"].(Value)
}
func (s Properties) SetBorderTopWidth(v Value) {
	s["border_top_width"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetBorderRightWidth() Value {
	return s["border_right_width"].(Value)
}
func (s Properties) SetBorderRightWidth(v Value) {
	s["border_right_width"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetBorderBottomLeftRadius() Values {
	return s["border_bottom_left_radius"].(Values)
}
func (s Properties) SetBorderBottomLeftRadius(v Values) {
	s["border_bottom_left_radius"] = v
}
func (Values) afterCascaded() {}
func (Values) afterCompute()  {}

func (s Properties) GetBorderBottomRightRadius() Values {
	return s["border_bottom_right_radius"].(Values)
}
func (s Properties) SetBorderBottomRightRadius(v Values) {
	s["border_bottom_right_radius"] = v
}
func (Values) afterCascaded() {}
func (Values) afterCompute()  {}

func (s Properties) GetBorderTopLeftRadius() Values {
	return s["border_top_left_radius"].(Values)
}
func (s Properties) SetBorderTopLeftRadius(v Values) {
	s["border_top_left_radius"] = v
}
func (Values) afterCascaded() {}
func (Values) afterCompute()  {}

func (s Properties) GetBorderTopRightRadius() Values {
	return s["border_top_right_radius"].(Values)
}
func (s Properties) SetBorderTopRightRadius(v Values) {
	s["border_top_right_radius"] = v
}
func (Values) afterCascaded() {}
func (Values) afterCompute()  {}

func (s Properties) GetOpacity() Float {
	return s["opacity"].(Float)
}
func (s Properties) SetOpacity(v Float) {
	s["opacity"] = v
}
func (Float) afterCascaded() {}
func (Float) afterCompute()  {}

func (s Properties) GetColumnWidth() Value {
	return s["column_width"].(Value)
}
func (s Properties) SetColumnWidth(v Value) {
	s["column_width"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetColumnCount() Value {
	return s["column_count"].(Value)
}
func (s Properties) SetColumnCount(v Value) {
	s["column_count"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetColumnGap() Value {
	return s["column_gap"].(Value)
}
func (s Properties) SetColumnGap(v Value) {
	s["column_gap"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetColumnRuleColor() Color {
	return s["column_rule_color"].(Color)
}
func (s Properties) SetColumnRuleColor(v Color) {
	s["column_rule_color"] = v
}
func (Color) afterCascaded() {}
func (Color) afterCompute()  {}

func (s Properties) GetColumnRuleStyle() String {
	return s["column_rule_style"].(String)
}
func (s Properties) SetColumnRuleStyle(v String) {
	s["column_rule_style"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetColumnRuleWidth() Value {
	return s["column_rule_width"].(Value)
}
func (s Properties) SetColumnRuleWidth(v Value) {
	s["column_rule_width"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetColumnFill() String {
	return s["column_fill"].(String)
}
func (s Properties) SetColumnFill(v String) {
	s["column_fill"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetColumnSpan() String {
	return s["column_span"].(String)
}
func (s Properties) SetColumnSpan(v String) {
	s["column_span"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFontFamily() Strings {
	return s["font_family"].(Strings)
}
func (s Properties) SetFontFamily(v Strings) {
	s["font_family"] = v
}
func (Strings) afterCascaded() {}
func (Strings) afterCompute()  {}

func (s Properties) GetFontFeatureSettings() SIntStrings {
	return s["font_feature_settings"].(SIntStrings)
}
func (s Properties) SetFontFeatureSettings(v SIntStrings) {
	s["font_feature_settings"] = v
}
func (SIntStrings) afterCascaded() {}
func (SIntStrings) afterCompute()  {}

func (s Properties) GetFontKerning() String {
	return s["font_kerning"].(String)
}
func (s Properties) SetFontKerning(v String) {
	s["font_kerning"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFontLanguageOverride() String {
	return s["font_language_override"].(String)
}
func (s Properties) SetFontLanguageOverride(v String) {
	s["font_language_override"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFontSize() Value {
	return s["font_size"].(Value)
}
func (s Properties) SetFontSize(v Value) {
	s["font_size"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetFontStretch() String {
	return s["font_stretch"].(String)
}
func (s Properties) SetFontStretch(v String) {
	s["font_stretch"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFontStyle() String {
	return s["font_style"].(String)
}
func (s Properties) SetFontStyle(v String) {
	s["font_style"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFontVariant() String {
	return s["font_variant"].(String)
}
func (s Properties) SetFontVariant(v String) {
	s["font_variant"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFontVariantAlternates() String {
	return s["font_variant_alternates"].(String)
}
func (s Properties) SetFontVariantAlternates(v String) {
	s["font_variant_alternates"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFontVariantCaps() String {
	return s["font_variant_caps"].(String)
}
func (s Properties) SetFontVariantCaps(v String) {
	s["font_variant_caps"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFontVariantEastAsian() SStrings {
	return s["font_variant_east_asian"].(SStrings)
}
func (s Properties) SetFontVariantEastAsian(v SStrings) {
	s["font_variant_east_asian"] = v
}
func (SStrings) afterCascaded() {}
func (SStrings) afterCompute()  {}

func (s Properties) GetFontVariantLigatures() SStrings {
	return s["font_variant_ligatures"].(SStrings)
}
func (s Properties) SetFontVariantLigatures(v SStrings) {
	s["font_variant_ligatures"] = v
}
func (SStrings) afterCascaded() {}
func (SStrings) afterCompute()  {}

func (s Properties) GetFontVariantNumeric() SStrings {
	return s["font_variant_numeric"].(SStrings)
}
func (s Properties) SetFontVariantNumeric(v SStrings) {
	s["font_variant_numeric"] = v
}
func (SStrings) afterCascaded() {}
func (SStrings) afterCompute()  {}

func (s Properties) GetFontVariantPosition() String {
	return s["font_variant_position"].(String)
}
func (s Properties) SetFontVariantPosition(v String) {
	s["font_variant_position"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFontWeight() IntString {
	return s["font_weight"].(IntString)
}
func (s Properties) SetFontWeight(v IntString) {
	s["font_weight"] = v
}
func (IntString) afterCascaded() {}
func (IntString) afterCompute()  {}

func (s Properties) GetBoxDecorationBreak() String {
	return s["box_decoration_break"].(String)
}
func (s Properties) SetBoxDecorationBreak(v String) {
	s["box_decoration_break"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetBreakAfter() String {
	return s["break_after"].(String)
}
func (s Properties) SetBreakAfter(v String) {
	s["break_after"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetBreakBefore() String {
	return s["break_before"].(String)
}
func (s Properties) SetBreakBefore(v String) {
	s["break_before"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetBreakInside() String {
	return s["break_inside"].(String)
}
func (s Properties) SetBreakInside(v String) {
	s["break_inside"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetMarginBreak() String {
	return s["margin_break"].(String)
}
func (s Properties) SetMarginBreak(v String) {
	s["margin_break"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetOrphans() Int {
	return s["orphans"].(Int)
}
func (s Properties) SetOrphans(v Int) {
	s["orphans"] = v
}
func (Int) afterCascaded() {}
func (Int) afterCompute()  {}

func (s Properties) GetWidows() Int {
	return s["widows"].(Int)
}
func (s Properties) SetWidows(v Int) {
	s["widows"] = v
}
func (Int) afterCascaded() {}
func (Int) afterCompute()  {}

func (s Properties) GetBookmarkLabel() BookmarkLabel {
	return s["bookmark_label"].(BookmarkLabel)
}
func (s Properties) SetBookmarkLabel(v BookmarkLabel) {
	s["bookmark_label"] = v
}
func (BookmarkLabel) afterCascaded() {}
func (BookmarkLabel) afterCompute()  {}

func (s Properties) GetBookmarkLevel() IntString {
	return s["bookmark_level"].(IntString)
}
func (s Properties) SetBookmarkLevel(v IntString) {
	s["bookmark_level"] = v
}
func (IntString) afterCascaded() {}
func (IntString) afterCompute()  {}

func (s Properties) GetBookmarkState() String {
	return s["bookmark_state"].(String)
}
func (s Properties) SetBookmarkState(v String) {
	s["bookmark_state"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetContent() SContent {
	return s["content"].(SContent)
}
func (s Properties) SetContent(v SContent) {
	s["content"] = v
}
func (SContent) afterCascaded() {}
func (SContent) afterCompute()  {}

func (s Properties) GetQuotes() Quotes {
	return s["quotes"].(Quotes)
}
func (s Properties) SetQuotes(v Quotes) {
	s["quotes"] = v
}
func (Quotes) afterCascaded() {}
func (Quotes) afterCompute()  {}

func (s Properties) GetStringSet() StringSet {
	return s["string_set"].(StringSet)
}
func (s Properties) SetStringSet(v StringSet) {
	s["string_set"] = v
}
func (StringSet) afterCascaded() {}
func (StringSet) afterCompute()  {}

func (s Properties) GetImageResolution() Value {
	return s["image_resolution"].(Value)
}
func (s Properties) SetImageResolution(v Value) {
	s["image_resolution"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetImageRendering() String {
	return s["image_rendering"].(String)
}
func (s Properties) SetImageRendering(v String) {
	s["image_rendering"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetObjectFit() String {
	return s["object_fit"].(String)
}
func (s Properties) SetObjectFit(v String) {
	s["object_fit"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetObjectPosition() Center {
	return s["object_position"].(Center)
}
func (s Properties) SetObjectPosition(v Center) {
	s["object_position"] = v
}
func (Center) afterCascaded() {}
func (Center) afterCompute()  {}

func (s Properties) GetSize() Values {
	return s["size"].(Values)
}
func (s Properties) SetSize(v Values) {
	s["size"] = v
}
func (Values) afterCascaded() {}
func (Values) afterCompute()  {}

func (s Properties) GetPage() Page {
	return s["page"].(Page)
}
func (s Properties) SetPage(v Page) {
	s["page"] = v
}
func (Page) afterCascaded() {}
func (Page) afterCompute()  {}

func (s Properties) GetBleedLeft() Value {
	return s["bleed_left"].(Value)
}
func (s Properties) SetBleedLeft(v Value) {
	s["bleed_left"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetBleedRight() Value {
	return s["bleed_right"].(Value)
}
func (s Properties) SetBleedRight(v Value) {
	s["bleed_right"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetBleedTop() Value {
	return s["bleed_top"].(Value)
}
func (s Properties) SetBleedTop(v Value) {
	s["bleed_top"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetBleedBottom() Value {
	return s["bleed_bottom"].(Value)
}
func (s Properties) SetBleedBottom(v Value) {
	s["bleed_bottom"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetMarks() Marks {
	return s["marks"].(Marks)
}
func (s Properties) SetMarks(v Marks) {
	s["marks"] = v
}
func (Marks) afterCascaded() {}
func (Marks) afterCompute()  {}

func (s Properties) GetHyphenateCharacter() String {
	return s["hyphenate_character"].(String)
}
func (s Properties) SetHyphenateCharacter(v String) {
	s["hyphenate_character"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetHyphenateLimitChars() Ints3 {
	return s["hyphenate_limit_chars"].(Ints3)
}
func (s Properties) SetHyphenateLimitChars(v Ints3) {
	s["hyphenate_limit_chars"] = v
}
func (Ints3) afterCascaded() {}
func (Ints3) afterCompute()  {}

func (s Properties) GetHyphenateLimitZone() Value {
	return s["hyphenate_limit_zone"].(Value)
}
func (s Properties) SetHyphenateLimitZone(v Value) {
	s["hyphenate_limit_zone"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetHyphens() String {
	return s["hyphens"].(String)
}
func (s Properties) SetHyphens(v String) {
	s["hyphens"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetLetterSpacing() Value {
	return s["letter_spacing"].(Value)
}
func (s Properties) SetLetterSpacing(v Value) {
	s["letter_spacing"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetTabSize() Value {
	return s["tab_size"].(Value)
}
func (s Properties) SetTabSize(v Value) {
	s["tab_size"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetTextAlign() String {
	return s["text_align"].(String)
}
func (s Properties) SetTextAlign(v String) {
	s["text_align"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetTextIndent() Value {
	return s["text_indent"].(Value)
}
func (s Properties) SetTextIndent(v Value) {
	s["text_indent"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetTextTransform() String {
	return s["text_transform"].(String)
}
func (s Properties) SetTextTransform(v String) {
	s["text_transform"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetWhiteSpace() String {
	return s["white_space"].(String)
}
func (s Properties) SetWhiteSpace(v String) {
	s["white_space"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetWordSpacing() Value {
	return s["word_spacing"].(Value)
}
func (s Properties) SetWordSpacing(v Value) {
	s["word_spacing"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetTransformOrigin() Point {
	return s["transform_origin"].(Point)
}
func (s Properties) SetTransformOrigin(v Point) {
	s["transform_origin"] = v
}
func (Point) afterCascaded() {}
func (Point) afterCompute()  {}

func (s Properties) GetTransform() Transforms {
	return s["transform"].(Transforms)
}
func (s Properties) SetTransform(v Transforms) {
	s["transform"] = v
}
func (Transforms) afterCascaded() {}
func (Transforms) afterCompute()  {}

func (s Properties) GetBoxSizing() String {
	return s["box_sizing"].(String)
}
func (s Properties) SetBoxSizing(v String) {
	s["box_sizing"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetOutlineColor() Color {
	return s["outline_color"].(Color)
}
func (s Properties) SetOutlineColor(v Color) {
	s["outline_color"] = v
}
func (Color) afterCascaded() {}
func (Color) afterCompute()  {}

func (s Properties) GetOutlineStyle() String {
	return s["outline_style"].(String)
}
func (s Properties) SetOutlineStyle(v String) {
	s["outline_style"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetOutlineWidth() Value {
	return s["outline_width"].(Value)
}
func (s Properties) SetOutlineWidth(v Value) {
	s["outline_width"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetOverflowWrap() String {
	return s["overflow_wrap"].(String)
}
func (s Properties) SetOverflowWrap(v String) {
	s["overflow_wrap"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetAlignContent() String {
	return s["align_content"].(String)
}
func (s Properties) SetAlignContent(v String) {
	s["align_content"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetAlignItems() String {
	return s["align_items"].(String)
}
func (s Properties) SetAlignItems(v String) {
	s["align_items"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetAlignSelf() String {
	return s["align_self"].(String)
}
func (s Properties) SetAlignSelf(v String) {
	s["align_self"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFlexBasis() Value {
	return s["flex_basis"].(Value)
}
func (s Properties) SetFlexBasis(v Value) {
	s["flex_basis"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetFlexDirection() String {
	return s["flex_direction"].(String)
}
func (s Properties) SetFlexDirection(v String) {
	s["flex_direction"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetFlexGrow() Float {
	return s["flex_grow"].(Float)
}
func (s Properties) SetFlexGrow(v Float) {
	s["flex_grow"] = v
}
func (Float) afterCascaded() {}
func (Float) afterCompute()  {}

func (s Properties) GetFlexShrink() Float {
	return s["flex_shrink"].(Float)
}
func (s Properties) SetFlexShrink(v Float) {
	s["flex_shrink"] = v
}
func (Float) afterCascaded() {}
func (Float) afterCompute()  {}

func (s Properties) GetFlexWrap() String {
	return s["flex_wrap"].(String)
}
func (s Properties) SetFlexWrap(v String) {
	s["flex_wrap"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetJustifyContent() String {
	return s["justify_content"].(String)
}
func (s Properties) SetJustifyContent(v String) {
	s["justify_content"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetMinHeight() Value {
	return s["min_height"].(Value)
}
func (s Properties) SetMinHeight(v Value) {
	s["min_height"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetMinWidth() Value {
	return s["min_width"].(Value)
}
func (s Properties) SetMinWidth(v Value) {
	s["min_width"] = v
}
func (Value) afterCascaded() {}
func (Value) afterCompute()  {}

func (s Properties) GetOrder() Int {
	return s["order"].(Int)
}
func (s Properties) SetOrder(v Int) {
	s["order"] = v
}
func (Int) afterCascaded() {}
func (Int) afterCompute()  {}

func (s Properties) GetTextDecorationLine() NDecorations {
	return s["text_decoration_line"].(NDecorations)
}
func (s Properties) SetTextDecorationLine(v NDecorations) {
	s["text_decoration_line"] = v
}
func (NDecorations) afterCascaded() {}
func (NDecorations) afterCompute()  {}

func (s Properties) GetTextDecorationColor() Color {
	return s["text_decoration_color"].(Color)
}
func (s Properties) SetTextDecorationColor(v Color) {
	s["text_decoration_color"] = v
}
func (Color) afterCascaded() {}
func (Color) afterCompute()  {}

func (s Properties) GetTextDecorationStyle() String {
	return s["text_decoration_style"].(String)
}
func (s Properties) SetTextDecorationStyle(v String) {
	s["text_decoration_style"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetOverflow() String {
	return s["overflow"].(String)
}
func (s Properties) SetOverflow(v String) {
	s["overflow"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetTextOverflow() String {
	return s["text_overflow"].(String)
}
func (s Properties) SetTextOverflow(v String) {
	s["text_overflow"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}

func (s Properties) GetAnchor() NamedString {
	return s["anchor"].(NamedString)
}
func (s Properties) SetAnchor(v NamedString) {
	s["anchor"] = v
}
func (NamedString) afterCascaded() {}
func (NamedString) afterCompute()  {}

func (s Properties) GetLink() NamedString {
	return s["link"].(NamedString)
}
func (s Properties) SetLink(v NamedString) {
	s["link"] = v
}
func (NamedString) afterCascaded() {}
func (NamedString) afterCompute()  {}

func (s Properties) GetLang() NamedString {
	return s["lang"].(NamedString)
}
func (s Properties) SetLang(v NamedString) {
	s["lang"] = v
}
func (NamedString) afterCascaded() {}
func (NamedString) afterCompute()  {}

func (s Properties) GetWeasySpecifiedDisplay() String {
	return s["_weasy_specified_display"].(String)
}
func (s Properties) SetWeasySpecifiedDisplay(v String) {
	s["_weasy_specified_display"] = v
}
func (String) afterCascaded() {}
func (String) afterCompute()  {}
