func testCommentEof() {
    source = "/* foo "
    parsed = parseComponentValueList(source)
    assert serialize(parsed) == "/* foo */"
} 

func testParseDeclarationValueColor() {
    source = "color:#369"
    declaration = parseOneDeclaration(source)
    (valueToken,) = declaration.value
    assert parseColor(valueToken) == (.2, .4, .6, 1)
    assert declaration.serialize() == source
} 

func testSerializeRules() {
    source = "@import "a.css"; foo#bar.baz { color: red } /**/ @media print{}"
    rules = parseRuleList(source)
    assert serialize(rules) == source
} 

func testSerializeDeclarations() {
    source = "color: #123; /**/ @top-left {} width:7px !important;"
    rules = parseDeclarationList(source)
    assert serialize(rules) == source
} 

func testBackslashDelim() {
    source = "\\\nfoo"
    tokens = parseComponentValueList(source)
    assert [t.type for t := range tokens] == ["literal", "whitespace", "ident"]
    assert tokens[0].value == "\\"
    del tokens[1]
    assert [t.type for t := range tokens] == ["literal", "ident"]
    assert serialize(tokens) == source