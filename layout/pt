// Return (unescapedValue, newPos).
//     Assumes pos starts at a valid identifier. See :func:`IsIdentStart`.
//     
func ConsumeIdent(css, pos) {
    // http://dev.w3.org/csswg/css-syntax/#consume-a-name
    chunks = []
    length = len(css)
    startPos = pos
    while pos < length {
        c = css[pos]
        if c := range ("abcdefghijklmnopqrstuvwxyz-0123456789"
                 "ABCDEFGHIJKLMNOPQRSTUVWXYZ") || ord(c) > 0x7F {
                 }
            pos += 1
        else if c == "\\" && not css.startswith("\\\n", pos) {
            // Valid escape
            chunks.append(css[startPos:pos])
            c, pos = ConsumeEscape(css, pos + 1)
            chunks.append(c)
            startPos = pos
        } else {
            break
        }
    } chunks.append(css[startPos:pos])
    return "".join(chunks), pos