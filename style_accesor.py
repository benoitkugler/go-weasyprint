""" Generated getters and setters for style object """
import re

SOURCE = "css/properties.go"
OUT = "css/accessors.go"

RE_PROPERTY = re.compile(r"^// prop:(\S+)")
RE_TYPEDEF = re.compile(r"^type (\S+) ")

TEMPLATE = """
func (s Properties) Get{prop_cap}() {type_} {{
    return s["{prop}"].({type_})
}}
func (s Properties) Set{prop_cap}(v {type_}) {{
    s["{prop}"] = v
}}
"""


def camel_case(s: str):
    out = ""
    for part in s.split("-"):
        out += part.capitalize()
    return out


with open(SOURCE) as f:
    properties = []
    code = """package css 

    // autogenerated from properties.go
    """
    for line in f.readlines():
        match = RE_PROPERTY.search(line)
        if match:
            properties.append(match.group(1))

        match = RE_TYPEDEF.search(line)
        if match:
            type_ = match.group(1)
            for prop in properties:
                code += TEMPLATE.format(prop=prop,
                                        prop_cap=camel_case(prop), type_=type_)
            properties = []

with open(OUT, "w") as f:
    f.write(code)
