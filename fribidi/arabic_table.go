package fribidi

// Code generated by fribidi/unidata/gen.go from UnicodeData.txt DO NOT EDIT
// required memory: 2 KB
var arShap = [...][4]rune{
	[4]int32{65152, 1569, 1569, 1569},
	[4]int32{65153, 65154, 1570, 1570},
	[4]int32{65155, 65156, 1571, 1571},
	[4]int32{65157, 65158, 1572, 1572},
	[4]int32{65159, 65160, 1573, 1573},
	[4]int32{65161, 65162, 65163, 65164},
	[4]int32{65165, 65166, 1575, 1575},
	[4]int32{65167, 65168, 65169, 65170},
	[4]int32{65171, 65172, 1577, 1577},
	[4]int32{65173, 65174, 65175, 65176},
	[4]int32{65177, 65178, 65179, 65180},
	[4]int32{65181, 65182, 65183, 65184},
	[4]int32{65185, 65186, 65187, 65188},
	[4]int32{65189, 65190, 65191, 65192},
	[4]int32{65193, 65194, 1583, 1583},
	[4]int32{65195, 65196, 1584, 1584},
	[4]int32{65197, 65198, 1585, 1585},
	[4]int32{65199, 65200, 1586, 1586},
	[4]int32{65201, 65202, 65203, 65204},
	[4]int32{65205, 65206, 65207, 65208},
	[4]int32{65209, 65210, 65211, 65212},
	[4]int32{65213, 65214, 65215, 65216},
	[4]int32{65217, 65218, 65219, 65220},
	[4]int32{65221, 65222, 65223, 65224},
	[4]int32{65225, 65226, 65227, 65228},
	[4]int32{65229, 65230, 65231, 65232},
	[4]int32{1595, 1595, 1595, 1595},
	[4]int32{1596, 1596, 1596, 1596},
	[4]int32{1597, 1597, 1597, 1597},
	[4]int32{1598, 1598, 1598, 1598},
	[4]int32{1599, 1599, 1599, 1599},
	[4]int32{1600, 1600, 1600, 1600},
	[4]int32{65233, 65234, 65235, 65236},
	[4]int32{65237, 65238, 65239, 65240},
	[4]int32{65241, 65242, 65243, 65244},
	[4]int32{65245, 65246, 65247, 65248},
	[4]int32{65249, 65250, 65251, 65252},
	[4]int32{65253, 65254, 65255, 65256},
	[4]int32{65257, 65258, 65259, 65260},
	[4]int32{65261, 65262, 1608, 1608},
	[4]int32{65263, 65264, 64488, 64489},
	[4]int32{65265, 65266, 65267, 65268},
	[4]int32{1611, 1611, 1611, 1611},
	[4]int32{1612, 1612, 1612, 1612},
	[4]int32{1613, 1613, 1613, 1613},
	[4]int32{1614, 1614, 1614, 1614},
	[4]int32{1615, 1615, 1615, 1615},
	[4]int32{1616, 1616, 1616, 1616},
	[4]int32{1617, 1617, 1617, 1617},
	[4]int32{1618, 1618, 1618, 1618},
	[4]int32{1619, 1619, 1619, 1619},
	[4]int32{1620, 1620, 1620, 1620},
	[4]int32{1621, 1621, 1621, 1621},
	[4]int32{1622, 1622, 1622, 1622},
	[4]int32{1623, 1623, 1623, 1623},
	[4]int32{1624, 1624, 1624, 1624},
	[4]int32{1625, 1625, 1625, 1625},
	[4]int32{1626, 1626, 1626, 1626},
	[4]int32{1627, 1627, 1627, 1627},
	[4]int32{1628, 1628, 1628, 1628},
	[4]int32{1629, 1629, 1629, 1629},
	[4]int32{1630, 1630, 1630, 1630},
	[4]int32{1631, 1631, 1631, 1631},
	[4]int32{1632, 1632, 1632, 1632},
	[4]int32{1633, 1633, 1633, 1633},
	[4]int32{1634, 1634, 1634, 1634},
	[4]int32{1635, 1635, 1635, 1635},
	[4]int32{1636, 1636, 1636, 1636},
	[4]int32{1637, 1637, 1637, 1637},
	[4]int32{1638, 1638, 1638, 1638},
	[4]int32{1639, 1639, 1639, 1639},
	[4]int32{1640, 1640, 1640, 1640},
	[4]int32{1641, 1641, 1641, 1641},
	[4]int32{1642, 1642, 1642, 1642},
	[4]int32{1643, 1643, 1643, 1643},
	[4]int32{1644, 1644, 1644, 1644},
	[4]int32{1645, 1645, 1645, 1645},
	[4]int32{1646, 1646, 1646, 1646},
	[4]int32{1647, 1647, 1647, 1647},
	[4]int32{1648, 1648, 1648, 1648},
	[4]int32{64336, 64337, 1649, 1649},
	[4]int32{1650, 1650, 1650, 1650},
	[4]int32{1651, 1651, 1651, 1651},
	[4]int32{1652, 1652, 1652, 1652},
	[4]int32{1653, 1653, 1653, 1653},
	[4]int32{1654, 1654, 1654, 1654},
	[4]int32{64477, 1655, 1655, 1655},
	[4]int32{1656, 1656, 1656, 1656},
	[4]int32{64358, 64359, 64360, 64361},
	[4]int32{64350, 64351, 64352, 64353},
	[4]int32{64338, 64339, 64340, 64341},
	[4]int32{1660, 1660, 1660, 1660},
	[4]int32{1661, 1661, 1661, 1661},
	[4]int32{64342, 64343, 64344, 64345},
	[4]int32{64354, 64355, 64356, 64357},
	[4]int32{64346, 64347, 64348, 64349},
	[4]int32{1665, 1665, 1665, 1665},
	[4]int32{1666, 1666, 1666, 1666},
	[4]int32{64374, 64375, 64376, 64377},
	[4]int32{64370, 64371, 64372, 64373},
	[4]int32{1669, 1669, 1669, 1669},
	[4]int32{64378, 64379, 64380, 64381},
	[4]int32{64382, 64383, 64384, 64385},
	[4]int32{64392, 64393, 1672, 1672},
	[4]int32{1673, 1673, 1673, 1673},
	[4]int32{1674, 1674, 1674, 1674},
	[4]int32{1675, 1675, 1675, 1675},
	[4]int32{64388, 64389, 1676, 1676},
	[4]int32{64386, 64387, 1677, 1677},
	[4]int32{64390, 64391, 1678, 1678},
	[4]int32{1679, 1679, 1679, 1679},
	[4]int32{1680, 1680, 1680, 1680},
	[4]int32{64396, 64397, 1681, 1681},
	[4]int32{1682, 1682, 1682, 1682},
	[4]int32{1683, 1683, 1683, 1683},
	[4]int32{1684, 1684, 1684, 1684},
	[4]int32{1685, 1685, 1685, 1685},
	[4]int32{1686, 1686, 1686, 1686},
	[4]int32{1687, 1687, 1687, 1687},
	[4]int32{64394, 64395, 1688, 1688},
	[4]int32{1689, 1689, 1689, 1689},
	[4]int32{1690, 1690, 1690, 1690},
	[4]int32{1691, 1691, 1691, 1691},
	[4]int32{1692, 1692, 1692, 1692},
	[4]int32{1693, 1693, 1693, 1693},
	[4]int32{1694, 1694, 1694, 1694},
	[4]int32{1695, 1695, 1695, 1695},
	[4]int32{1696, 1696, 1696, 1696},
	[4]int32{1697, 1697, 1697, 1697},
	[4]int32{1698, 1698, 1698, 1698},
	[4]int32{1699, 1699, 1699, 1699},
	[4]int32{64362, 64363, 64364, 64365},
	[4]int32{1701, 1701, 1701, 1701},
	[4]int32{64366, 64367, 64368, 64369},
	[4]int32{1703, 1703, 1703, 1703},
	[4]int32{1704, 1704, 1704, 1704},
	[4]int32{64398, 64399, 64400, 64401},
	[4]int32{1706, 1706, 1706, 1706},
	[4]int32{1707, 1707, 1707, 1707},
	[4]int32{1708, 1708, 1708, 1708},
	[4]int32{64467, 64468, 64469, 64470},
	[4]int32{1710, 1710, 1710, 1710},
	[4]int32{64402, 64403, 64404, 64405},
	[4]int32{1712, 1712, 1712, 1712},
	[4]int32{64410, 64411, 64412, 64413},
	[4]int32{1714, 1714, 1714, 1714},
	[4]int32{64406, 64407, 64408, 64409},
	[4]int32{1716, 1716, 1716, 1716},
	[4]int32{1717, 1717, 1717, 1717},
	[4]int32{1718, 1718, 1718, 1718},
	[4]int32{1719, 1719, 1719, 1719},
	[4]int32{1720, 1720, 1720, 1720},
	[4]int32{1721, 1721, 1721, 1721},
	[4]int32{64414, 64415, 1722, 1722},
	[4]int32{64416, 64417, 64418, 64419},
	[4]int32{1724, 1724, 1724, 1724},
	[4]int32{1725, 1725, 1725, 1725},
	[4]int32{64426, 64427, 64428, 64429},
	[4]int32{1727, 1727, 1727, 1727},
	[4]int32{64420, 64421, 1728, 1728},
	[4]int32{64422, 64423, 64424, 64425},
	[4]int32{1730, 1730, 1730, 1730},
	[4]int32{1731, 1731, 1731, 1731},
	[4]int32{1732, 1732, 1732, 1732},
	[4]int32{64480, 64481, 1733, 1733},
	[4]int32{64473, 64474, 1734, 1734},
	[4]int32{64471, 64472, 1735, 1735},
	[4]int32{64475, 64476, 1736, 1736},
	[4]int32{64482, 64483, 1737, 1737},
	[4]int32{1738, 1738, 1738, 1738},
	[4]int32{64478, 64479, 1739, 1739},
	[4]int32{64508, 64509, 64510, 64511},
	[4]int32{1741, 1741, 1741, 1741},
	[4]int32{1742, 1742, 1742, 1742},
	[4]int32{1743, 1743, 1743, 1743},
	[4]int32{64484, 64485, 64486, 64487},
	[4]int32{1745, 1745, 1745, 1745},
	[4]int32{64430, 64431, 1746, 1746},
	[4]int32{64432, 64433, 1747, 1747},
}

func getArabicShapePres(r rune, shape uint8) rune {
	if r < 1569 || r > 1747 {
		return r
	}
	return arShap[r-1569][shape]
}
